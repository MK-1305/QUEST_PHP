### 例外とは何か

例外（Exception）とは、プログラム実行中に発生する予期しない状況やエラーのことです。
これは、プログラムの通常の実行フローを中断し、プログラムがクラッシュすることなくエラーを適切に処理できるようにするための仕組みです。
例えば、ファイルを開こうとしたときにそのファイルが存在しない、またはネットワーク接続が失敗した場合などがあります。

### 何のためにあるのか

例外処理の主な目的は、プログラムの安定性と信頼性を高めることです。例外が発生した場合、プログラムは即座にクラッシュするのではなく、エラーが発生したことを検出し、それを「捕捉」して適切に対処することができます。この処理により、ユーザーにエラーメッセージを表示したり、プログラムの一部のみを再実行したり、プログラムを安全に終了させたりすることが可能になります。

例外処理の利点は以下の通りです：

1. **エラーの検出が容易になる：** 例外を使用することで、エラーが発生した正確な場所を追跡しやすくなります。
2. **プログラムの制御フローが明確になる：** 例外処理を行うことで、エラー処理コードを通常のビジネスロジックから分離できます。これにより、プログラムが読みやすくなり、メンテナンスがしやすくなります。
3. **リソースの安全な解放：** プログラムがクラッシュすることなく例外を捕捉することで、ファイルやネットワーク接続などのリソースを適切にクリーンアップし、解放することができます。
4. **エラー処理の一元化：** 例外処理を使用すると、エラー処理ロジックを一箇所に集約できるため、コードの重複を避け、エラー処理の一貫性を保つことができます。

簡単に言うと、例外とはプログラムの実行中に起きる予期しない問題のことであり、これを適切に処理することで、プログラムが中断することなく、より安全に動作するようにするための仕組みです。